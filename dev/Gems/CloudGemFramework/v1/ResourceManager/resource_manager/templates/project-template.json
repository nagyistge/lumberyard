{
    "AWSTemplateFormatVersion": "2010-09-09",

    "Metadata": {
        "CloudCanvas": {
            "Id": "$Revision: #1 $"
        }
    },

    "Outputs": {
        "ServiceUrl": {
            "Description": "The service url.",
            "Value": {
                "Fn::GetAtt": [
                    "ServiceApi",
                    "Url"
                ]
            }
        }
    },

    "Parameters": {

        "CloudCanvasStack": {
            "Type": "String",
            "Description": "Identifies this stack as a Lumberyard Cloud Canvas managed stack.",
            "Default": "Project"
        },

        "ConfigurationKey": {
            "Type": "String",
            "Description": "Location in the configuration bucket of configuration data."
        },

        "CloudGemPortalTableReadCapacityUnits": {
            "Default": "1",
            "Description": "Number of reads per second.",
            "Type": "Number"
        },

        "CloudGemPortalTableWriteCapacityUnits": {
            "Default": "1",
            "Description": "Number of writes per second.",
            "Type": "Number"
        },

        "ServiceApiCacheClusterEnabled": {
            "Default": "false",
            "Description": "Indicates whether cache clustering is enabled for the service API.",
            "Type": "String"
        },

        "ServiceApiCacheClusterSize": {
            "Default": "0.5",
            "Description": "Indicates whether cache clustering is enabled for the service API.",
            "Type": "String"
        }

    },

    "Resources": {

        "AccessControl": {
            "Type": "Custom::AccessControl",
            "Properties": {
                "ServiceToken": { "Fn::Join": [ "", [ "arn:aws:lambda:", { "Ref": "AWS::Region" }, ":", { "Ref": "AWS::AccountId" }, ":function:", { "Ref": "ProjectResourceHandler" } ] ] },
                "ConfigurationBucket": { "Ref": "Configuration" },
                "ConfigurationKey": { "Ref": "ConfigurationKey" }
            },
            "DependsOn": [ 
                "CloudGemPortal", 
                "CloudGemPortalBucketPolicy",
                "CloudGemPortalAdministratorRole",
                "CloudGemPortalUserAccess",
                "CloudGemPortalUserRole",
                "Configuration",
                "ConfigurationBucketPolicy",
                "Logs",
                "Helper",
                "PlayerAccessTokenExchange",
                "PlayerAccessTokenExchangeExecution",
                "ProjectAccess",
                "ProjectAdmin",
                "ProjectAdminRestrictions",
                "ProjectIdentityPool",
                "ProjectIdentityPoolAuthenticatedRole",
                "ProjectIdentityPoolUnauthenticatedRole",
                "ProjectOwner", 
                "ProjectOwnerAccess",
                "ProjectResourceHandler",
                "ProjectResourceHandlerExecution",
                "ProjectUserPool",
                "ServiceApi", 
                "ServiceLambda", 
                "SeviceLambdaConfiguration", 
                "ServiceLambdaExecution" 
            ]
        },

        "CloudGemPortal": {
        	"Type": "AWS::S3::Bucket",
        	"Properties": {
        		"LoggingConfiguration": {
        			"DestinationBucketName": {
        				"Ref": "Logs"
        			},
        			"LogFilePrefix": "CloudGemPortal/"
        		}
        	}
        },

        "CloudGemPortalBucketPolicy": {
        	"Type": "AWS::S3::BucketPolicy",
        	"Properties": {
        		"Bucket": {
        			"Ref": "CloudGemPortal"
        		},
        		"PolicyDocument": {
        			"Version": "2012-10-17",
        			"Statement": [{
        					"Action": "s3:*",
        					"Effect": "Deny",
        					"Resource": [{
        							"Fn::Join": [
        								"",
        								[
        									"arn:aws:s3:::", {
        										"Ref": "CloudGemPortal"
        									}
        								]
        							]
        						}, {
        							"Fn::Join": [
        								"",
        								[
        									"arn:aws:s3:::", {
        										"Ref": "CloudGemPortal"
        									},
        									"/*"
        								]
        							]
        						}

        					],
        					"Condition": {
        						"Bool": {
        							"aws:SecureTransport": "false"
        						}
        					},
        					"Principal": "*"
        				}
        			]
        		}
        	}
        },

        "CloudGemPortalAdministratorRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "Path": {
                    "Fn::Join": [
                        "",
                        [
                            "/", {
                                "Ref": "AWS::StackName"
                            },
                            "/"
                        ]
                    ]
                },
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [{
                            "Effect": "Allow",
                            "Action": "sts:AssumeRoleWithWebIdentity",
                            "Principal": {
                                "Federated": "cognito-identity.amazonaws.com"
                            }
                        }, {
                            "Sid": "AccountUserAssumeLambdaRole",
                            "Effect": "Allow",
                            "Action": "sts:AssumeRole",
                            "Principal": {
                                "Service": "lambda.amazonaws.com"
                            }
                        }
                    ]
                },
                "ManagedPolicyArns": [{
                        "Ref": "CloudGemPortalUserAccess"
                    }
                ]
            },
            "Metadata": {
                "CloudCanvas": {
                    "RoleMappings": [{
                            "AbstractRole": [
                                "*.CloudGemPortalAdministratorRole"
                            ],
                            "Effect": "Allow"
                        }
                    ]
                }
            }
        },

        "CloudGemPortalUserAccess": {
            "Type": "AWS::IAM::ManagedPolicy",
            "Properties": {
                "Path": {
                    "Fn::Join": [
                        "",
                        [
                            "/", {
                                "Ref": "AWS::StackName"
                            },
                            "/"
                        ]
                    ]
                },
                "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Sid": "ReadProjectSettings",
                            "Effect": "Allow",
                            "Action": [
                                "s3:GetObject"
                            ],
                            "Resource": [
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "arn:aws:s3:::", {
                                                "Ref": "Configuration"
                                            },
                                            "/upload/*"
                                        ]
                                    ]
                                }, 
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "arn:aws:s3:::", {
                                                "Ref": "Configuration"
                                            },
                                            "/project-settings.json"
                                        ]
                                    ]
                                }, 
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "arn:aws:s3:::", {
                                                "Ref": "Configuration"
                                            },
                                            "/cgp-resource-code/*"
                                        ]
                                    ]
                                }
                            ]
                        }, 
                        {
                            "Sid": "ExecuteServiceAPI",
                            "Effect": "Allow",
                            "Action": [
                                "execute-api:Invoke"
                            ],
                            "Resource": [
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "arn:aws:execute-api:", {
                                                "Ref": "AWS::Region"
                                            },
                                            ":", {
                                                "Ref": "AWS::AccountId"
                                            },
                                            ":*/api/*"
                                        ]
                                    ]
                                }
                            ]
                        }, 
                        {
                            "Sid": "GetAPIGateway",
                            "Effect": "Allow",
                            "Action": [
                                "apigateway:GET"
                            ],
                            "Resource": [
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "arn:aws:apigateway:", {
                                                "Ref": "AWS::Region"
                                            },
                                            "::/restapis/*/stages/api/exports/swagger"
                                        ]
                                    ]
                                }
                            ]
                        }, 
                        {
                            "Sid": "GetCloudWatchLogs",
                            "Effect": "Allow",
                            "Action": [
                                "logs:FilterLogEvents"
                            ],
                            "Resource": [
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "arn:aws:logs:", {
                                                "Ref": "AWS::Region"
                                            },
                                            ":", {
                                                "Ref": "AWS::AccountId"
                                            },
                                            ":log-group:/aws/lambda/", {
                                                "Ref": "AWS::StackName"
                                            },
                                            "-*"
                                        ]
                                    ]
                                }
                            ]
                        }, 
                        {
                            "Sid": "ReadProjectDeploymentAndResourceGroupStackState",
                            "Effect": "Allow",
                            "Action": [
                                "cloudformation:DescribeStackResources",
                                "cloudformation:DescribeStackResource",
                                "cloudformation:DescribeStacks"
                            ],
                            "Resource": [
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "arn:aws:cloudformation:", {
                                                "Ref": "AWS::Region"
                                            },
                                            ":", {
                                                "Ref": "AWS::AccountId"
                                            },
                                            ":stack/", {
                                                "Ref": "AWS::StackName"
                                            },
                                            "-*"
                                        ]
                                    ]
                                }
                            ]
                        }, 
                        {
                            "Sid": "WriteLogs",
                            "Effect": "Allow",
                            "Action": [
                                "logs:CreateLogGroup",
                                "logs:CreateLogStream",
                                "logs:PutLogEvents"
                            ],
                            "Resource": {
                                "Fn::Join": [
                                    "",
                                    [
                                        "arn:aws:logs:", {
                                            "Ref": "AWS::Region"
                                        },
                                        ":", {
                                            "Ref": "AWS::AccountId"
                                        },
                                        ":function:", {
                                            "Ref": "ProjectResourceHandler"
                                        }
                                    ]
                                ]
                            }
                        }
                    ]
                }
            }
        },

        "CloudGemPortalUserRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "Path": {
                    "Fn::Join": [
                        "",
                        [
                            "/", {
                                "Ref": "AWS::StackName"
                            },
                            "/"
                        ]
                    ]
                },
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [{
                            "Effect": "Allow",
                            "Action": "sts:AssumeRoleWithWebIdentity",
                            "Principal": {
                                "Federated": "cognito-identity.amazonaws.com"
                            }
                        }
                    ]
                },
                "ManagedPolicyArns": [
                    {
                        "Ref": "CloudGemPortalUserAccess"
                    }
                ]
            },
            "Metadata": {
                "CloudCanvas": {
                    "RoleMappings": [
                        {
                            "AbstractRole": [
                                "*.CloudGemPortalUserRole"
                            ],
                            "Effect": "Allow"
                        }
                    ]
                }
            }
        },

        "Configuration": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
                "VersioningConfiguration": {
                    "Status": "Enabled"
                },
                "LoggingConfiguration": {
                    "DestinationBucketName":  { "Ref": "Logs" },
                    "LogFilePrefix": "Configuration/"
                },
                "LifecycleConfiguration": {
                    "Rules": [
                        {
                            "Id": "DeleteOldVersions",
                            "NoncurrentVersionExpirationInDays": "2",
                            "Status": "Enabled"
                        },
                        {
                            "Id": "DeleteUploads",
                            "Prefix": "uploads",
                            "ExpirationInDays": 2,
                            "Status": "Enabled"
                        }
                    ]
                }
            }
        },

        "ConfigurationBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
                "Bucket": {"Ref" : "Configuration"},
                "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Action": "s3:*",
                            "Effect": "Deny",
                            "Resource": [
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "arn:aws:s3:::",
                                            {"Ref" : "Configuration"}
                                        ]
                                    ]
                                },
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "arn:aws:s3:::",
                                            {"Ref" : "Configuration"},
                                            "/*"
                                        ]
                                    ]
                                }
                            ],
                            "Condition": {
                                "Bool": {
                                    "aws:SecureTransport": "false"
                                }
                            },
                            "Principal": "*"
                        }
                    ]
                }
            }
        },

        "Logs": {
            "Type": "AWS::S3::Bucket",
            "DeletionPolicy" : "Retain",
            "Properties": {
                "AccessControl": "LogDeliveryWrite",
                "LifecycleConfiguration": {
                    "Rules": [
                        {
                            "Id": "DeleteOldLogs",
                            "ExpirationInDays" : 14,
                            "Status": "Enabled"
                        }
                    ]
                }
            }
        },

        "Helper": {
            "Type": "Custom::Helper",
            "Properties": {
                "Input": {
                    "LowerCaseStackName": { "HelperFn::LowerCase": { "Ref": "AWS::StackName" } }
                },
                "ServiceToken": { "Fn::Join": [ "", [ "arn:aws:lambda:", { "Ref": "AWS::Region" }, ":", { "Ref": "AWS::AccountId" }, ":function:", { "Ref": "ProjectResourceHandler" } ] ] }
            }
        },

        "PlayerAccessTokenExchange": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Description": "Implements the token exchange for oAuth and openid used for player access.",
                "Handler": "auth_token_exchange.handler",
                "Role": { "Fn::GetAtt": [ "PlayerAccessTokenExchangeExecution", "Arn" ] },
                "Runtime": "python2.7",
                "Code": {
                    "S3Bucket": { "Ref": "Configuration" },
                    "S3Key": { "Fn::Join": [ "/", [ { "Ref": "ConfigurationKey" }, "PlayerAccessTokenExchange-lambda-code.zip" ]] }
                }
            }
        },

        "PlayerAccessTokenExchangeExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Action": "sts:AssumeRole",
                            "Principal": {
                                "Service": "lambda.amazonaws.com"
                            }
                        }
                    ]
                },
                "Path": { "Fn::Join": [ "", [ "/", { "Ref": "AWS::StackName" }, "/" ]] },
                "Policies": [
                    {
                        "PolicyName": "PlayerAccessTokenExchange",
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Sid": "DescribeStacks",
                                    "Action": [
                                        "cloudformation:DescribeStackResources",
                                        "cloudformation:DescribeStackResource"
                                    ],
                                    "Effect": "Allow",
                                    "Resource": [
                                        "*"
                                    ]
                                },
                                {
                                    "Sid": "GetAuthSettings",
                                    "Action": [
                                        "s3:GetObject",
                                        "s3:HeadObject"
                                    ],
                                    "Effect": "Allow",
                                    "Resource": [
                                        { "Fn::Join": [ "", [ "arn:aws:s3:::", { "Ref": "Configuration" }, "/player-access/auth-settings.json" ]] }
                                    ]
                                },
                                {
                                    "Sid": "WriteLogs",
                                    "Effect": "Allow",
                                    "Action": [
                                        "logs:CreateLogGroup",
                                        "logs:CreateLogStream",
                                        "logs:PutLogEvents"
                                    ],
                                    "Resource": "arn:aws:logs:*:*:*"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        
        "ProjectAccess": {
            "Type": "AWS::IAM::ManagedPolicy",
            "Properties": {
                "Path": { "Fn::Join": [ "", [ "/", { "Ref": "AWS::StackName" }, "/" ]] },
                "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Sid": "ReadProjectDeploymentAndResourceGroupStackState",
                            "Effect": "Allow",
                            "Action": [
                                "cloudformation:DescribeStackResources",
                                "cloudformation:DescribeStackResource"
                            ],
                            "Resource": [
                                { "Fn::Join": [ "", [ "arn:aws:cloudformation:", { "Ref": "AWS::Region" }, ":", { "Ref": "AWS::AccountId" }, ":stack/", { "Ref": "AWS::StackName" }, "/*" ]] },
                                { "Fn::Join": [ "", [ "arn:aws:cloudformation:", { "Ref": "AWS::Region" }, ":", { "Ref": "AWS::AccountId" }, ":stack/", { "Ref": "AWS::StackName" }, "-*" ]] }
                            ]
                        },
                        {
                            "Sid": "ReadProjectSettings",
                            "Effect": "Allow",
                            "Action": [
                                "s3:GetObject"
                            ],
                            "Resource": [
                                { "Fn::Join": [ "", [ "arn:aws:s3:::", { "Ref": "Configuration" }, "/project-settings.json" ]] },
                                { "Fn::Join": [ "", [ "arn:aws:s3:::", { "Ref": "Configuration" }, "/project-settings/*" ]] }
                            ]
                        }
                    ]
                }
            }
        },

        "ProjectAdmin": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "Path": { "Fn::Join": [ "", [ "/", { "Ref": "AWS::StackName" }, "/" ]] },
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Sid": "AccountUserAssumeRole",
                            "Effect": "Allow",
                            "Action": "sts:AssumeRole",
                            "Principal": { "AWS": {"Ref": "AWS::AccountId"} }
                        }
                    ]
                },
                "ManagedPolicyArns": [
                    { "Ref": "ProjectAccess" },
                    { "Ref": "ProjectOwnerAccess" },
                    { "Ref": "ProjectAdminRestrictions" }
                ]
            },
            "Metadata": {
                "CloudCanvas": {
                    "RoleMappings": [
                        {
                            "AbstractRole": [ "*.ProjectAdmin" ],
                            "Effect": "Allow"
                        }
                    ]
                }
            }
        },

        "ProjectAdminRestrictions": {
            "Type": "AWS::IAM::ManagedPolicy",
            "Properties": {
                "Path": { "Fn::Join": [ "", [ "/", { "Ref": "AWS::StackName" }, "/" ]] },
                "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Sid": "PreventAccidentialChangesToImportantStacks",
                            "Effect": "Deny",
                            "Action": [
                                "cloudformation:CreateStack",
                                "cloudformation:UpdateStack",
                                "cloudformation:DeleteStack"
                            ],
                            "Resource": [
                                { "Fn::Join": [ "", [ "arn:aws:cloudformation:", { "Ref": "AWS::Region" }, ":", { "Ref": "AWS::AccountId" }, ":stack/", { "Ref": "AWS::StackName" }, "-Release*" ]] }
                            ]
                        }
                    ]
                }
            }
        },

        "ProjectIdentityPool": {
            "Metadata": {
                "CloudCanvas": {
                    "Identities": [{
                            "IdentityPoolLogicalName": "ProjectIdentityPool",
                            "ClientApp": "CloudGemPortalApp"
                        }
                    ]
                }
            },
            "Type": "Custom::CognitoIdentityPool",
            "Properties": {
                "ServiceToken": {
                    "Fn::Join": [
                        "",
                        [
                            "arn:aws:lambda:", {
                                "Ref": "AWS::Region"
                            },
                            ":", {
                                "Ref": "AWS::AccountId"
                            },
                            ":function:", {
                                "Ref": "ProjectResourceHandler"
                            }
                        ]
                    ]
                },
                "AllowUnauthenticatedIdentities": "true",
                "UseAuthSettingsObject": "false",
                "ConfigurationBucket": {
                    "Ref": "Configuration"
                },
                "ConfigurationKey": {
                    "Ref": "ConfigurationKey"
                },
                "IdentityPoolName": "ProjectIdentityPool",
                "Roles": {
                    "authenticated": {
                        "Fn::GetAtt": [
                            "ProjectIdentityPoolAuthenticatedRole",
                            "Arn"
                        ]
                    },
                    "unauthenticated": {
                        "Fn::GetAtt": [
                            "ProjectIdentityPoolUnauthenticatedRole",
                            "Arn"
                        ]
                    }
                },
                "RoleMappings": {
                    "Cognito": {
                        "Type": "Token",
                        "AmbiguousRoleResolution": "AuthenticatedRole"
                    }
                }
            },
            "DependsOn": [
                "ProjectUserPool"
            ]
        },

        "ProjectIdentityPoolAuthenticatedRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "Path": {
                    "Fn::Join": [
                        "",
                        [
                            "/", {
                                "Ref": "AWS::StackName"
                            },
                            "/"
                        ]
                    ]
                },
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [{
                            "Effect": "Allow",
                            "Action": "sts:AssumeRoleWithWebIdentity",
                            "Principal": {
                                "Federated": "cognito-identity.amazonaws.com"
                            }
                        }, {
                            "Sid": "AccountUserAssumeRole",
                            "Effect": "Allow",
                            "Action": "sts:AssumeRole",
                            "Principal": {
                                "AWS": {
                                    "Ref": "AWS::AccountId"
                                }
                            }
                        }
                    ]
                }
            }
        },

        "ProjectIdentityPoolUnauthenticatedRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "Path": {
                    "Fn::Join": [
                        "",
                        [
                            "/", {
                                "Ref": "AWS::StackName"
                            },
                            "/"
                        ]
                    ]
                },
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [{
                            "Effect": "Allow",
                            "Action": "sts:AssumeRoleWithWebIdentity",
                            "Principal": {
                                "Federated": "cognito-identity.amazonaws.com"
                            }
                        }
                    ]
                },
                "Policies": [
                ]
            }
        },

        "ProjectOwner": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "Path": { "Fn::Join": [ "", [ "/", { "Ref": "AWS::StackName" }, "/" ]] },
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Sid": "AccountUserAssumeRole",
                            "Effect": "Allow",
                            "Action": "sts:AssumeRole",
                            "Principal": { "AWS": {"Ref": "AWS::AccountId"} }
                        }
                    ]
                },
                "ManagedPolicyArns": [
                    { "Ref": "ProjectAccess" },
                    { "Ref": "ProjectOwnerAccess" }
                ]
            },
            "Metadata": {
                "CloudCanvas": {
                    "RoleMappings": [
                        {
                            "AbstractRole": [ "*.ProjectAdmin", "*.ProjectOwner" ],
                            "Effect": "Allow"
                        }
                    ]
                }
            }
        },

        "ProjectOwnerAccess": {
            "Type": "AWS::IAM::ManagedPolicy",
            "Properties": {
                "Path": { "Fn::Join": [ "", [ "/", { "Ref": "AWS::StackName" }, "/" ]] },
                "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Sid": "CreateAndManageProjectAndDeploymentRoles",
                            "Effect": "Allow",
                            "Action": [
                                "iam:AttachRolePolicy",
                                "iam:DetachRolePolicy",
                                "iam:CreatePolicy",
                                "iam:CreatePolicyVersion",
                                "iam:CreateRole",
                                "iam:DeletePolicy",
                                "iam:DeletePolicyVersion",
                                "iam:DeleteRole",
                                "iam:DeleteRolePolicy",
                                "iam:GetPolicy",
                                "iam:GetRole",
                                "iam:GetRolePolicy",
                                "iam:ListPolicyVersions",
                                "iam:ListRolePolicies",
                                "iam:PassRole",
                                "iam:PutRolePolicy"
                            ],
                            "Resource": [
                                { "Fn::Join": [ "", [ "arn:aws:iam::", {"Ref": "AWS::AccountId"}, ":role/", {"Ref": "AWS::StackName"}, "/*"]] },
                                { "Fn::Join": [ "", [ "arn:aws:iam::", {"Ref": "AWS::AccountId"}, ":policy/", {"Ref": "AWS::StackName"}, "/*"]] }
                            ]
                        },
                        {
                            "Sid": "CreateLambdaFunctions",
                            "Effect": "Allow",
                            "Action": "lambda:CreateFunction",
                            "Resource": "*"
                        },
                        {
                            "Sid": "CreateUpdateAndDeleteDeploymentAndResourceGroupStacks",
                            "Effect": "Allow",
                            "Action": [
                                "cloudformation:DescribeStacks",
                                "cloudformation:DescribeStackEvents",
                                "cloudformation:GetTemplate",
                                "cloudformation:CreateStack",
                                "cloudformation:UpdateStack",
                                "cloudformation:DeleteStack"
                            ],
                            "Resource": [
                                { "Fn::Join": [ "", [ "arn:aws:cloudformation:", { "Ref": "AWS::Region" }, ":", { "Ref": "AWS::AccountId" }, ":stack/", { "Ref": "AWS::StackName" }, "-*" ]] }
                            ]
                        },
                        {
                            "Sid": "InvokeProjectResourceHandler",
                            "Effect": "Allow",
                            "Action": [
                                "lambda:InvokeFunction"
                            ],
                            "Resource": [
                                { "Fn::Join": [ "", [ "arn:aws:lambda:", { "Ref": "AWS::Region" }, ":", { "Ref": "AWS::AccountId" }, ":function:", { "Ref": "ProjectResourceHandler" } ] ] }
                            ]
                        },
                        {
                            "Sid": "FullAccessToProjectConfigurationAndLogs",
                            "Effect": "Allow",
                            "Action": [
                                "s3:*"
                            ],
                            "Resource": [
                                { "Fn::Join": [ "", [ "arn:aws:s3:::", { "Ref": "Configuration" } ]] },
                                { "Fn::Join": [ "", [ "arn:aws:s3:::", { "Ref": "Logs" } ]] }
                            ]
                        },
                        {
                            "Sid": "FullAccessToProjectDeploymentAndResourceGroupLogs",
                            "Effect": "Allow",
                            "Action": [
                                "logs:*"
                            ],
                            "Resource": [
                                { "Fn::Join": [ "", [ "arn:aws:logs:", { "Ref": "AWS::Region" }, ":", { "Ref": "AWS::AccountId" }, ":log-group:/aws/lambda/", { "Ref": "AWS::StackName" }, "-*" ]] }
                            ]
                        },
                        {
                            "Sid": "FullAccessToProjectDeploymentAndResourceGroupResources",
                            "Effect": "Allow",
                            "Action": [
                                "dynamodb:*",
                                "s3:*",
                                "sqs:*",
                                "sns:*",
                                "lambda:*"
                            ],
                            "Resource": [
                                { "Fn::Join": [ "", [ "arn:aws:dynamodb:", { "Ref": "AWS::Region" }, ":", { "Ref": "AWS::AccountId" }, ":table/", { "Ref": "AWS::StackName" }, "-*" ]] },
                                { "Fn::Join": [ "", [ "arn:aws:s3:::", { "Fn::GetAtt": [ "Helper", "LowerCaseStackName" ] }, "-*" ] ] },
                                { "Fn::Join": [ "", [ "arn:aws:sqs:", { "Ref": "AWS::Region" }, ":", { "Ref": "AWS::AccountId" }, ":", { "Ref": "AWS::StackName" }, "-*" ]] },
                                { "Fn::Join": [ "", [ "arn:aws:sns:*:", { "Ref": "AWS::AccountId" }, ":", { "Ref": "AWS::StackName" }, "-*" ] ] },
                                { "Fn::Join": [ "", [ "arn:aws:lambda:", { "Ref": "AWS::Region" }, ":", { "Ref": "AWS::AccountId" }, ":function:", { "Ref": "AWS::StackName" }, "-*" ]] }
                            ]
                        },
                        {
                            "Sid": "UpdateProjectStack",
                            "Effect": "Allow",
                            "Action": [
                                "cloudformation:DescribeStackEvents",
                                "cloudformation:DescribeStacks",
                                "cloudformation:GetTemplate",
                                "cloudformation:UpdateStack"
                            ],
                            "Resource": [
                                { "Fn::Join": [ "", [ "arn:aws:cloudformation:", { "Ref": "AWS::Region" }, ":", { "Ref": "AWS::AccountId" }, ":stack/", { "Ref": "AWS::StackName" }, "/*" ]] }
                            ]
                        }
                    ]
                }
            }
        },

        "ProjectResourceHandler": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Description": "Implements the custom resources used in this project's templates.",
                "Handler": "custom_resource.handler",
                "Role": { "Fn::GetAtt": [ "ProjectResourceHandlerExecution", "Arn" ] },
                "Runtime": "python2.7",
                "Timeout" : 300,
                "Code": {
                    "S3Bucket": { "Ref": "Configuration" },
                    "S3Key": { "Fn::Join": [ "/", [ { "Ref": "ConfigurationKey" }, "ProjectResourceHandler-lambda-code.zip" ]] }
                }
            }
        },

        "ProjectResourceHandlerExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "Path": { "Fn::Join": [ "", [ "/", { "Ref": "AWS::StackName" }, "/" ]] },
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Action": "sts:AssumeRole",
                            "Principal": {
                                "Service": "lambda.amazonaws.com"
                            }
                        }
                    ]
                },
                "Policies": [
                    {
                        "PolicyName": "ProjectAccess",
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Sid": "CreateUpdateCognitoIdentity",
                                    "Effect": "Allow",
                                    "Action": [
                                        "cognito-identity:*"
                                    ],
                                    "Resource": { "Fn::Join": [ "", [ "arn:aws:cognito-identity:", {"Ref": "AWS::Region" }, ":", { "Ref": "AWS::AccountId" }, ":identitypool/*" ]] }
                                },
                                {
                                    "Sid": "CreateUpdateCognitoUserPool",
                                    "Action": "cognito-idp:*",
                                    "Effect": "Allow",
                                    "Resource": { "Fn::Join": [ "", [ "arn:aws:cognito-idp:", {"Ref": "AWS::Region" }, ":", { "Ref": "AWS::AccountId" }, ":userpool/*" ]] }
                                },
                                {
                                    "Sid": "CreateCognitoUserPools",
                                    "Action": ["cognito-idp:CreateUserPool"],
                                    "Effect": "Allow",
                                    "Resource": "*"
                                },
                                {
                                    "Sid": "DescribeStacksAndResources",
                                    "Effect": "Allow",
                                    "Action": [
                                        "cloudformation:ListStackResources",
                                        "cloudformation:DescribeStackResource",
                                        "cloudformation:DescribeStacks"
                                    ],
                                    "Resource": [
                                        "*"
                                    ]
                                },
                                {
                                    "Sid": "ManageAccessControlRoles",
                                    "Effect": "Allow",
                                    "Action": [
                                        "iam:CreateRole",
                                        "iam:DeleteRole",
                                        "iam:GetRole",
                                        "iam:DeleteRolePolicy",
                                        "iam:PutRolePolicy",
                                        "iam:ListRolePolicies",
                                        "iam:ListRoles"
                                    ],
                                    "Resource": { "Fn::Join": [ "", [ "arn:aws:iam::", {"Ref": "AWS::AccountId"}, ":role/", {"Ref": "AWS::StackName"}, "/*"]] }
                                },
                                {
                                    "Sid": "ManageAPIGatewayResources",
                                    "Action": "apigateway:*",
                                    "Resource": [
                                        { "Fn::Join": [ "", [ "arn:aws:apigateway:", {"Ref": "AWS::Region" }, "::/restapis/*" ] ] },
                                        { "Fn::Join": [ "", [ "arn:aws:apigateway:", {"Ref": "AWS::Region" }, "::/restapis" ] ] }
                                    ],
                                    "Effect": "Allow"
                                },
                                {
                                    "Sid": "PassRolesToServices",
                                    "Action": "iam:PassRole",
                                    "Resource": { "Fn::Join": [ "", [ "arn:aws:iam::", {"Ref": "AWS::AccountId"}, ":role/", {"Ref": "AWS::StackName"}, "/*" ] ] },
                                    "Effect": "Allow"
                                },
                                {
                                    "Sid": "ReadAndWriteUploadedConfiguration",
                                    "Effect": "Allow",
                                    "Action": [
                                        "s3:GetObject",
                                        "s3:PutObject"
                                    ],
                                    "Resource": [
                                        { "Fn::Join": [ "", [ "arn:aws:s3:::", { "Ref": "Configuration" }, "/upload/*" ]] },
                                        { "Fn::Join": [ "", [ "arn:aws:s3:::", { "Ref": "Configuration" }, "/project-settings.json" ]] }
                                    ]
                                },
                                {
                                    "Sid": "ListConfigurationObjects",
                                    "Effect": "Allow",
                                    "Action": [
                                        "s3:ListBucket"
                                    ],
                                    "Resource": { "Fn::Join": [ "", [ "arn:aws:s3:::", { "Ref": "Configuration" }]] }
                                },
                                {
                                    "Sid": "ReadPlayerAccessConfiguration",
                                    "Effect": "Allow",
                                    "Action": [
                                        "s3:GetObject"
                                    ],
                                    "Resource": { "Fn::Join": [ "", [ "arn:aws:s3:::", { "Ref": "Configuration" }, "/player-access/auth-settings.json" ]] }
                                },
                                {
                                    "Sid": "WriteLogs",
                                    "Effect": "Allow",
                                    "Action": [
                                        "logs:CreateLogGroup",
                                        "logs:CreateLogStream",
                                        "logs:PutLogEvents"
                                    ],
                                    "Resource": "arn:aws:logs:*:*:*"
                                },
                                {
                                    "Sid": "DescribeQueue",
                                    "Effect": "Allow",
                                    "Action": [
                                        "sqs:GetQueueAttributes"
                                    ],
                                    "Resource": {"Fn::Join": ["", ["arn:aws:sqs:", {"Ref": "AWS::Region" }, ":", {"Ref": "AWS::AccountId"}, ":*" ]] }
                                }
                            ]
                        }
                    }
                ]
            },
            "Metadata": {
                "CloudCanvas": {
                    "RoleMappings": []
                }
            }
        },

        "ProjectUserPool": {
            "Metadata": {
                "CloudCanvas": {
                    "Permissions": [
                        {
                            "AbstractRole": "CloudGemPortalAdministratorRole",
                            "Action": [
                                "cognito-idp:AdminAddUserToGroup",
                                "cognito-idp:AdminCreateUser",
                                "cognito-idp:AdminDeleteUser",
                                "cognito-idp:AdminGetUser",
                                "cognito-idp:AdminListGroupsForUser",
                                "cognito-idp:AdminResetUserPassword",
                                "cognito-idp:ListUsers",
                                "cognito-idp:ListUsersInGroup"
                            ]
                        }
                    ],
                    "Identities": [
                        {
                            "IdentityPoolLogicalName": "ProjectIdentityPool",
                            "ClientApp": "CloudGemPortalApp"
                        }
                    ]
                }
            },
            "Properties": {
                "ClientApps": [
                    "CloudGemPortalApp"
                ],
                "RefreshTokenValidity": "1",
                "ConfigurationKey": {
                    "Ref": "ConfigurationKey"
                },
                "Groups": [{
                        "Name": "administrator",
                        "Description": "The Cloud Gem Portal administrators group.",
                        "Role": {
                            "Fn::GetAtt": [
                                "CloudGemPortalAdministratorRole",
                                "Arn"
                            ]
                        },
                        "Precedence": "0"
                    }, {
                        "Name": "user",
                        "Description": "The Cloud Gem Portal users group.",
                        "Role": {
                            "Fn::GetAtt": [
                                "CloudGemPortalUserRole",
                                "Arn"
                            ]
                        },
                        "Precedence": "10"
                    }
                ],
                "AllowAdminCreateUserOnly": "true",
                "PoolName": "ProjectUserPool",
                "ServiceToken": {
                    "Fn::Join": [
                        "",
                        [
                            "arn:aws:lambda:", {
                                "Ref": "AWS::Region"
                            },
                            ":", {
                                "Ref": "AWS::AccountId"
                            },
                            ":function:", {
                                "Ref": "ProjectResourceHandler"
                            }
                        ]
                    ]
                }
            },
            "Type": "Custom::CognitoUserPool"
        },
        
        "ServiceApi": {
            "Properties": {
                "CacheClusterEnabled": {
                    "Ref": "ServiceApiCacheClusterEnabled"
                },
                "CacheClusterSize": {
                    "Ref": "ServiceApiCacheClusterSize"
                },
                "ConfigurationBucket": {
                    "Ref": "Configuration"
                },
                "ConfigurationKey": {
                    "Ref": "ConfigurationKey"
                },
                "MethodSettings": {},
                "ServiceToken": {
                    "Fn::Join": [
                        "",
                        [
                            "arn:aws:lambda:", {
                                "Ref": "AWS::Region"
                            },
                            ":", {
                                "Ref": "AWS::AccountId"
                            },
                            ":function:", {
                                "Ref": "ProjectResourceHandler"
                            }
                        ]
                    ]
                },
                "SwaggerSettings": {
                    "ServiceLambdaArn": {
                        "Fn::GetAtt": [
                            "ServiceLambda",
                            "Arn"
                        ]
                    }
                }
            },
            "Type": "Custom::ServiceApi"
        },

        "ServiceLambda": {
            "Type": "AWS::Lambda::Function",
            "Metadata": {
                "CloudCanvas": {
                    "Permissions": {
                        "AbstractRole": "ServiceApi",
                        "Action": "lambda:InvokeFunction"
                    }
                }
            },
            "Properties": {
                "Description": "Supports Cloud Canvas Resource Manager project operations.",
                "Handler": "service.dispatch",
                "Code": {
                    "S3Bucket": {
                        "Fn::GetAtt": [
                            "ServiceLambdaConfiguration",
                            "ConfigurationBucket"
                        ]
                    },
                    "S3Key": {
                        "Fn::GetAtt": [
                            "ServiceLambdaConfiguration",
                            "ConfigurationKey"
                        ]
                    }
                },
                "Handler": "service.dispatch",
                "Role": {
                    "Fn::GetAtt": [
                        "ServiceLambdaConfiguration",
                        "Role"
                    ]
                },
                "Runtime": {
                    "Fn::GetAtt": [
                        "ServiceLambdaConfiguration",
                        "Runtime"
                    ]
                },
                "Timeout": 30
            }
        },

        "ServiceLambdaConfiguration": {
            "Properties": {
                "ConfigurationBucket": {
                    "Ref": "Configuration"
                },
                "ConfigurationKey": {
                    "Ref": "ConfigurationKey"
                },
                "FunctionName": "ServiceLambda",
                "Runtime": "python2.7",
                "ServiceToken": {
                    "Fn::Join": [
                        "",
                        [
                            "arn:aws:lambda:", {
                                "Ref": "AWS::Region"
                            },
                            ":", {
                                "Ref": "AWS::AccountId"
                            },
                            ":function:", {
                                "Ref": "ProjectResourceHandler"
                            }
                        ]
                    ]
                },
                "Settings": {
                    "PROJECT_STACK_ARN": { "Ref": "AWS::StackId" }
                }
            },
            "Type": "Custom::LambdaConfiguration"
        },

        "ServiceLambdaExecution": {
            "Type": "AWS::IAM::ManagedPolicy",
            "Properties": {
                "Path": { "Fn::Join": [ "", [ "/", { "Ref": "AWS::StackName" }, "/" ]] },
                "Roles": [ 
                    {
                        "Fn::GetAtt": [
                            "ServiceLambdaConfiguration",
                            "RoleName"
                        ]
                    }
                ],
                "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Sid": "DescribeStacksAndResources",
                            "Effect": "Allow",
                            "Action": [
                                "cloudformation:DescribeStackResource",
                                "cloudformation:DescribeStacks",
                                "cloudformation:ListStackResources"
                            ],
                            "Resource": [
                                "*"
                            ]                                    
                        },
                        {
                            "Sid": "ReadUploadedConfiguration",
                            "Effect": "Allow",
                            "Action": [
                                "s3:GetObject"
                            ],
                            "Resource": [
                                { "Fn::Join": [ "", [ "arn:aws:s3:::", { "Ref": "Configuration" }, "/upload/*" ]] },
                                { "Fn::Join": [ "", [ "arn:aws:s3:::", { "Ref": "Configuration" }, "/project-settings.json" ]] }
                            ]
                        }
                    ]
                }
            }
        }
    }

}
