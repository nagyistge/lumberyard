########################################################################################
#
# All or portions of this file Copyright (c) Amazon.com, Inc. or its affiliates, or
# a third party where indicated.
#
# For complete copyright and license terms please see the LICENSE at the root of this
# distribution (the "License"). All use of this software is governed by the License,
# or, if provided, by the license below or the license accompanying this file. Do not
# remove or modify any license notices. This file is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#
########################################################################################

def build(bld):

    bld.DefineGem(

        ## Runtime build configuration
        includes =  [
            bld.Path('Code/CryEngine'),
            bld.Path('Code/CryEngine/Cry3DEngine'),
            bld.Path('Code/CryEngine/RenderDll'),
            bld.Path('Code/CryEngine/RenderDll/XRenderD3D9'),
            bld.Path('Gems/LmbrCentral/Code/Include'),
            bld.Path('Code/Framework/AzToolsFramework'),
            bld.Path('Code/SDKs')
        ],
        win_features    = ['crcfix'],
        use             = ['CryRenderD3D11', 'CryCommon', 'Cry3DEngine'],

        ## Editor build configuration
        editor = dict(
            platforms   = ['win', 'darwin'],
            configurations  = ['all'],
            features    = ['qt5'],
            use         = ['CryRenderD3D11', 'CryCommon', 'Cry3DEngine', 'EditorCore', 'Editor', 'EditorCommon'],
            includes    = [
                'include',
                'Source',
                bld.Path('Code/CryEngine'),
                bld.Path('Code/CryEngine/Cry3DEngine'),
                bld.Path('Code/CryEngine/RenderDll/XRenderD3D9'),
                bld.Path('Code/CryEngine/RenderDll'),
                bld.Path('Code/CryEngine/RenderDll/Common'),
                bld.Path('Code/Framework/AzToolsFramework'),
                bld.Path('Gems/LmbrCentral/Code/Include'),
                bld.Path('Gems/LmbrCentral/Code/Source'),
                bld.Path('Code/Sandbox'),
                bld.Path('Code/Sandbox/Editor'),
                bld.Path('Code/Sandbox/Editor/Include'),
                bld.Path('Code/Sandbox/Plugins/EditorCommon'),
                bld.Path('Code/SDKs'),
            ],
            
            uselib  = [
                'QT5CORE',
                'QT5QUICK',
                'QT5QML',
                'QT5GUI', 
                'QT5WIDGETS',
                'LZMA',
                'LZSS',
                'LZ4' 
            ],
            
            defines = [
                'CLOUDS_GEM_EDITOR', 'RENDER_ELEMENT_IMPORTS'
            ],
        
            darwin_defines  = ['EDITOR_PCDEBUGCODE'],
            darwin_uselib   = ['AWS_CPP_SDK_ALL'],   
            darwin_lib      = ['curl'],


            win_uselib      = ['XTP', 'AWS_CPP_SDK_ALL'],
            win_features    = ['crcfix', 'ExternalLyIdentity', 'ExternalLyMetrics'],
            win_use         = bld.make_aws_library_task_list(['LyMetricsProducer', 'LyIdentity']),
            win_defines     = ['METRICS_SYSTEM_COMPONENT_ENABLED']
        ),
    )
		